###############################################################################
#                                                                             #
# IAR C/C++ Compiler V5.60.5.50814/W32 for MSP430       04/Apr/2014  00:29:49 #
# Copyright 1996-2013 IAR Systems AB.                                         #
#                                                                             #
#    __rt_version  =  3                                                       #
#    __double_size =  32                                                      #
#    __reg_r4      =  free                                                    #
#    __reg_r5      =  free                                                    #
#    __pic         =  no                                                      #
#    __core        =  430X                                                    #
#    __data_model  =  small                                                   #
#    Source file   =  C:\Users\Nathan\Documents\GitHub\ece-306-HW9\prgm_contr #
#                     ol.c                                                    #
#    Command line  =  C:\Users\Nathan\Documents\GitHub\ece-306-HW9\prgm_contr #
#                     ol.c -lC C:\Users\Nathan\Documents\GitHub\ece-306-HW9\D #
#                     ebug\List\ -o C:\Users\Nathan\Documents\GitHub\ece-306- #
#                     HW9\Debug\Obj\ --no_cse --no_unroll --no_inline         #
#                     --no_code_motion --no_tbaa --debug -D__MSP430FR5739__   #
#                     -e --double=32 --dlib_config "C:\Program Files          #
#                     (x86)\IAR Systems\Embedded Workbench                    #
#                     6.5\430\LIB\DLIB\dl430xsfn.h" --core=430X               #
#                     --data_model=small -Ol --multiplier=32                  #
#                     --multiplier_location=4C0 --hw_workaround=CPU40         #
#    List file     =  C:\Users\Nathan\Documents\GitHub\ece-306-HW9\Debug\List #
#                     \prgm_control.lst                                       #
#    Object file   =  C:\Users\Nathan\Documents\GitHub\ece-306-HW9\Debug\Obj\ #
#                     prgm_control.r43                                        #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Nathan\Documents\GitHub\ece-306-HW9\prgm_control.c
      1          #include  "msp430.h"
      2          #include  "functions.h"
      3          #include  "macros.h"
      4          
      5          

   \                                 In  segment DATA16_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
      6          volatile int LeftMotorPower = 0;
   \                     LeftMotorPower:
   \   000000                DS8 2

   \                                 In  segment DATA16_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
      7          volatile int RightMotorPower = 0;
   \                     RightMotorPower:
   \   000000                DS8 2

   \                                 In  segment DATA16_Z, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_zero
      8          int ProgramState = 0;
   \                     ProgramState:
   \   000000                DS8 2

   \                                 In  segment DATA16_I, align 2, align-sorted
   \   000000                REQUIRE ?cstart_init_copy
      9          int OldState = -1;
   \                     OldState:
   \   000000                DS8 2
   \   000002                REQUIRE `?<Initializer for OldState>`
     10          

   \                                 In  segment DATA16_I, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_copy
     11          char IsLight = 1;
   \                     IsLight:
   \   000000                DS8 1
   \   000001                REQUIRE `?<Initializer for IsLight>`

   \                                 In  segment DATA16_I, align 1, align-sorted
   \   000000                REQUIRE ?cstart_init_copy
     12          char WasLight = 1;
   \                     WasLight:
   \   000000                DS8 1
   \   000001                REQUIRE `?<Initializer for WasLight>`
     13          

   \                                 In  segment CODE, align 2
     14          void Control_Process(void)
   \                     Control_Process:
     15          {
     16          	ProgramState = ADC_Thumb/511; //Three distinct states
   \   000000   1C42....     MOV.W   &ADC_Thumb, R12
   \   000004   3E40FF01     MOV.W   #0x1ff, R14
   \   000008   ........     CALLA   #?DivMod16s
   \   00000C   824C....     MOV.W   R12, &ProgramState
     17                            //"0123456789abcdef"
     18          	display_2 = "                ";
   \   000010   B240........ MOV.W   #`?<Constant "                ">`, &display_2
     19          	
     20          	switch(ProgramState)
   \   000016   1F42....     MOV.W   &ProgramState, R15
   \   00001A   0F83         SUB.W   #0x0, R15
   \   00001C   0524         JEQ     ??Control_Process_0
   \   00001E   1F83         SUB.W   #0x1, R15
   \   000020   0A24         JEQ     ??Control_Process_1
   \   000022   1F83         SUB.W   #0x1, R15
   \   000024   0F24         JEQ     ??Control_Process_2
   \   000026   153C         JMP     ??Control_Process_3
     21          	{
     22          		case 0:
     23          					//	"0123456789abcdef"
     24          			display_1 = " Resistor Codes ";  
   \                     ??Control_Process_0:
   \   000028   B240........ MOV.W   #`?<Constant " Resistor Codes ">`, &display_1
     25                                  display_2 = "                ";
   \   00002E   B240........ MOV.W   #`?<Constant "                ">`, &display_2
     26          			break;
   \   000034   1001         RETA
     27          		case 1: 
     28          					//	"0123456789abcdef"
     29          			display_1 = "     Shapes     ";
   \                     ??Control_Process_1:
   \   000036   B240........ MOV.W   #`?<Constant "     Shapes     ">`, &display_1
     30                                  display_2 = "                ";
   \   00003C   B240........ MOV.W   #`?<Constant "                ">`, &display_2
     31          			break;
   \   000042   1001         RETA
     32          		case 2:
     33          					//	"0123456789abcdef"
     34          			display_1 = "      Song      ";
   \                     ??Control_Process_2:
   \   000044   B240........ MOV.W   #`?<Constant "      Song      ">`, &display_1
     35                                  display_2 = "                ";
   \   00004A   B240........ MOV.W   #`?<Constant "                ">`, &display_2
     36          			break;
   \   000050   1001         RETA
     37          		default:
     38          					//	"0123456789abcdef"
     39          			display_1 = "  OUT OF RANGE  ";
   \                     ??Control_Process_3:
   \   000052   B240........ MOV.W   #`?<Constant "  OUT OF RANGE  ">`, &display_1
     40                                  display_2 = "                ";
   \   000058   B240........ MOV.W   #`?<Constant "                ">`, &display_2
     41          			break;
     42          	}
     43          }
   \   00005E   1001         RETA

   \                                 In  segment DATA16_ID, align 2, align-sorted
   \                     `?<Initializer for OldState>`:
   \   000000   FFFF         DC16 -1

   \                                 In  segment DATA16_ID, align 1, align-sorted
   \                     `?<Initializer for IsLight>`:
   \   000000   01           DC8 1

   \                                 In  segment DATA16_ID, align 1, align-sorted
   \                     `?<Initializer for WasLight>`:
   \   000000   01           DC8 1

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "                ">`:
   \   000000   202020202020 DC8 "                "
   \            202020202020
   \            2020202000  

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant " Resistor Codes ">`:
   \   000000   205265736973 DC8 " Resistor Codes "
   \            746F7220436F
   \            6465732000  

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "     Shapes     ">`:
   \   000000   202020202053 DC8 "     Shapes     "
   \            686170657320
   \            2020202000  

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "      Song      ">`:
   \   000000   202020202020 DC8 "      Song      "
   \            536F6E672020
   \            2020202000  

   \                                 In  segment DATA16_C, align 1, align-sorted
   \                     `?<Constant "  OUT OF RANGE  ">`:
   \   000000   20204F555420 DC8 "  OUT OF RANGE  "
   \            4F462052414E
   \            4745202000  

   Maximum stack usage in bytes:

   CSTACK Function
   ------ --------
      4   Control_Process


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      17  ?<Constant "                ">
      17  ?<Constant "      Song      ">
      17  ?<Constant "     Shapes     ">
      17  ?<Constant "  OUT OF RANGE  ">
      17  ?<Constant " Resistor Codes ">
       1  ?<Initializer for IsLight>
       2  ?<Initializer for OldState>
       1  ?<Initializer for WasLight>
      96  Control_Process
       1  IsLight
       2  LeftMotorPower
       2  OldState
       2  ProgramState
       2  RightMotorPower
       1  WasLight

 
 96 bytes in segment CODE
 85 bytes in segment DATA16_C
  4 bytes in segment DATA16_I
  4 bytes in segment DATA16_ID
  6 bytes in segment DATA16_Z
 
 96 bytes of CODE  memory
 89 bytes of CONST memory
 10 bytes of DATA  memory

Errors: none
Warnings: none
